{"version":3,"sources":["components/Navbar.js","components/Card.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/alertState.js","context/github/githubReducer.js","context/github/githubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Card","user","src","avatar_url","alt","login","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","e","key","clearUsers","trim","hide","search","show","onChange","target","Home","loading","users","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","urlName","useParams","getUser","getRepos","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","res","data","items","App","path","element","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8d414df.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Navbar = () => (\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n    <div className=\"navbar-brand\">Github Поиск</div>\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        <NavLink to=\"/\" className=\"nav-link\">\n          Главная\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/about\" className=\"nav-link\">\n          Информация\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Card = ({ user }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{user.login}</h5>\r\n        <Link to={`/profile/${user.login}`} className=\"btn btn-primary\">\r\n          Открыть\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext();\r\n","import { createContext } from \"react\";\r\n\r\nexport const GithubContext = createContext();\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { GithubContext } from \"../context/github/githubContext\";\r\n\r\nexport const Search = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const alert = useContext(AlertContext);\r\n  const github = useContext(GithubContext);\r\n\r\n  const onSubmit = (e) => {\r\n    if (e.key !== \"Enter\") {\r\n      return;\r\n    }\r\n\r\n    github.clearUsers();\r\n\r\n    if (value.trim()) {\r\n      alert.hide();\r\n      github.search(value.trim());\r\n    } else {\r\n      alert.show(\"Введите данные пользователя!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Введите ник пользователя...\"\r\n        onKeyPress={onSubmit}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\nimport { Card } from \"../components/Card\";\nimport { Search } from \"../components/Search\";\nimport { GithubContext } from \"../context/github/githubContext\";\n\nexport const Home = () => {\n  const { loading, users } = useContext(GithubContext);\n  return (\n    <>\n      <Search />\n      <div className=\"row\">\n        {loading ? (\n          <p className=\"text-center\">Загрузка...</p>\n        ) : (\n          users.map((user) => (\n            <div key={user.id} className=\"col-sm-4 mb-4\">\n              <Card user={user} />\n            </div>\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const About = () => {\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Информация</h1>\n        <p className=\"lead\">\n          Версия приложения: <strong>1.0.0</strong>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\r\n\r\nexport const Repos = ({ repos }) => (\r\n  <>\r\n    {repos.map((repo) => (\r\n      <div className=\"card mb-3\" key={repo.id}>\r\n        <div className=\"card-body\">\r\n          <h5>\r\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {repo.name}\r\n            </a>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n","import React, { useContext, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Repos } from \"../components/Repos\";\nimport { GithubContext } from \"../context/github/githubContext\";\n\nexport const Profile = () => {\n  const urlName = useParams().name;\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\n\n  useEffect(() => {\n    getUser(urlName);\n    getRepos(urlName);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <p className=\"text-center\">Загрузка...</p>;\n  }\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n  } = user;\n\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-link\">\n        На главную\n      </Link>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 text-center\">\n              <img src={avatar_url} alt={name} style={{ width: \"150px\" }} />\n              <h1>{name}</h1>\n              {location && <p>Местоположение: {location}</p>}\n            </div>\n            <div className=\"col\">\n              {bio && (\n                <>\n                  <h3>BIO</h3>\n                  <p>{bio}</p>\n                </>\n              )}\n              <a\n                href={html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-dark\"\n              >\n                Открыть профиль\n              </a>\n              <ul>\n                {login && (\n                  <li>\n                    <strong>Username: </strong> {login}\n                  </li>\n                )}\n\n                {company && (\n                  <li>\n                    <strong>Компания: </strong> {company}\n                  </li>\n                )}\n\n                {blog && (\n                  <li>\n                    <strong>Website: </strong> {blog}\n                  </li>\n                )}\n              </ul>\n\n              <div className=\"badge badge-primary\">Подписчики: {followers}</div>\n              <div className=\"badge badge-success\">Подписан: {following}</div>\n              <div className=\"badge badge-info\">\n                Репозитории: {public_repos}\n              </div>\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Repos repos={repos} />\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n\r\n  if (!alert) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`alert alert-${alert.type || \"secondary\"} alert-dismissible`}\r\n      role=\"alert\"\r\n    >\r\n      {alert.text}\r\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\nexport const CLEAR_USERS = \"CLEAR_USERS\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\n","import React, { useReducer } from \"react\";\r\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer } from \"./alertReducer\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, null);\r\n\r\n  const hide = () => dispatch({ type: HIDE_ALERT });\r\n\r\n  const show = (text, type = \"secondary\") =>\r\n    dispatch({ type: SHOW_ALERT, payload: { type, text } });\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ hide, show, alert: state }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import {\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, action) => ({\r\n    ...state,\r\n    users: action.payload,\r\n    loading: false,\r\n  }),\r\n  [GET_REPOS]: (state, action) => ({\r\n    ...state,\r\n    repos: action.payload,\r\n    loading: false,\r\n  }),\r\n  [GET_USER]: (state, action) => ({\r\n    ...state,\r\n    user: action.payload,\r\n    loading: false,\r\n  }),\r\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\r\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useReducer } from \"react\";\r\nimport {\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\nimport { GithubContext } from \"./githubContext\";\r\nimport { githubReducer } from \"./githubReducer\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nconst withCreds = (url) => {\r\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n};\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: [],\r\n  };\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  const search = async (value) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n\r\n  const getUser = async (name) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const getRepos = async (name) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const clearUsers = () =>\r\n    dispatch({\r\n      type: CLEAR_USERS,\r\n    });\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  const { user, users, repos, loading } = state;\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        setLoading,\r\n        search,\r\n        getUser,\r\n        getRepos,\r\n        clearUsers,\r\n        user,\r\n        users,\r\n        repos,\r\n        loading,\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Profile } from \"./pages/Profile\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/alertState\";\nimport { GithubState } from \"./context/github/githubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert />\n            <Routes>\n              <Route path=\"/*\" element={<Home />} />\n              <Route path=\"/about\" element={<About />} />\n              <Route path=\"/profile/:name\" element={<Profile />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}